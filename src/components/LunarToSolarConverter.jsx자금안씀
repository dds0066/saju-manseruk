import React, { useState } from 'react';
import { X, Calendar, Clock, ArrowRight, AlertCircle, CheckCircle } from 'lucide-react';

export const LunarToSolarConverter = ({ onClose, onConvert }) => {
  const [lunarData, setLunarData] = useState({
    year: '',
    month: '',
    day: '',
    hour: '12',
    minute: '0',
    isLeapMonth: false
  });

  const [convertedResult, setConvertedResult] = useState(null);
  const [isConverting, setIsConverting] = useState(false);

  // 한국천문연구원 기반 정확한 음력 설날(1월 1일) 양력 대응 날짜
  const lunarNewYearDates = {
    2040: new Date(2040, 1, 12),   // 2040년 2월 12일
    2039: new Date(2039, 1, 2),    // 2039년 2월 2일
    2038: new Date(2038, 1, 22),   // 2038년 2월 22일
    2037: new Date(2037, 1, 11),   // 2037년 2월 11일
    2036: new Date(2036, 0, 31),   // 2036년 1월 31일
    2035: new Date(2035, 1, 19),   // 2035년 2월 19일
    2034: new Date(2034, 1, 8),    // 2034년 2월 8일
    2033: new Date(2033, 0, 28),   // 2033년 1월 28일
    2032: new Date(2032, 1, 17),   // 2032년 2월 17일
    2031: new Date(2031, 1, 5),    // 2031년 2월 5일
    2030: new Date(2030, 0, 29),   // 2030년 1월 29일
    2029: new Date(2029, 1, 13),   // 2029년 2월 13일
    2028: new Date(2028, 1, 3),    // 2028년 2월 3일
    2027: new Date(2027, 1, 22),   // 2027년 2월 22일
    2026: new Date(2026, 1, 11),   // 2026년 2월 11일
    2025: new Date(2025, 0, 29),   // 2025년 1월 29일
    2024: new Date(2024, 1, 10),   // 2024년 2월 10일
    2023: new Date(2023, 0, 22),   // 2023년 1월 22일
    2022: new Date(2022, 1, 1),    // 2022년 2월 1일
    2021: new Date(2021, 1, 12),   // 2021년 2월 12일
    2020: new Date(2020, 0, 25),   // 2020년 1월 25일
    2019: new Date(2019, 1, 5),    // 2019년 2월 5일
    2018: new Date(2018, 1, 16),   // 2018년 2월 16일
    2017: new Date(2017, 0, 28),   // 2017년 1월 28일
    2016: new Date(2016, 1, 8),    // 2016년 2월 8일
    2015: new Date(2015, 1, 19),   // 2015년 2월 19일
    2014: new Date(2014, 0, 31),   // 2014년 1월 31일
    2013: new Date(2013, 1, 10),   // 2013년 2월 10일
    2012: new Date(2012, 0, 23),   // 2012년 1월 23일
    2011: new Date(2011, 1, 3),    // 2011년 2월 3일
    2010: new Date(2010, 1, 14),   // 2010년 2월 14일
    2009: new Date(2009, 0, 26),   // 2009년 1월 26일
    2008: new Date(2008, 1, 7),    // 2008년 2월 7일
    2007: new Date(2007, 1, 18),   // 2007년 2월 18일
    2006: new Date(2006, 0, 29),   // 2006년 1월 29일
    2005: new Date(2005, 1, 9),    // 2005년 2월 9일
    2004: new Date(2004, 0, 22),   // 2004년 1월 22일
    2003: new Date(2003, 1, 1),    // 2003년 2월 1일
    2002: new Date(2002, 1, 12),   // 2002년 2월 12일
    2001: new Date(2001, 0, 24),   // 2001년 1월 24일
    2000: new Date(2000, 1, 5),    // 2000년 2월 5일
    1999: new Date(1999, 1, 16),   // 1999년 2월 16일
    1998: new Date(1998, 0, 28),   // 1998년 1월 28일
    1997: new Date(1997, 1, 7),    // 1997년 2월 7일
    1996: new Date(1996, 1, 19),   // 1996년 2월 19일
    1995: new Date(1995, 0, 31),   // 1995년 1월 31일
    1994: new Date(1994, 1, 10),   // 1994년 2월 10일
    1993: new Date(1993, 0, 23),   // 1993년 1월 23일
    1992: new Date(1992, 1, 4),    // 1992년 2월 4일
    1991: new Date(1991, 1, 15),   // 1991년 2월 15일
    1990: new Date(1990, 0, 27),   // 1990년 1월 27일
    1989: new Date(1989, 1, 6),    // 1989년 2월 6일
    1988: new Date(1988, 1, 17),   // 1988년 2월 17일
    1987: new Date(1987, 0, 29),   // 1987년 1월 29일
    1986: new Date(1986, 1, 9),    // 1986년 2월 9일
    1985: new Date(1985, 1, 20),   // 1985년 2월 20일
    1984: new Date(1984, 1, 2),    // 1984년 2월 2일
    1983: new Date(1983, 1, 13),   // 1983년 2월 13일
    1982: new Date(1982, 0, 25),   // 1982년 1월 25일
    1981: new Date(1981, 1, 5),    // 1981년 2월 5일
    1980: new Date(1980, 1, 16),   // 1980년 2월 16일
    1979: new Date(1979, 0, 28),   // 1979년 1월 28일
    1978: new Date(1978, 1, 7),    // 1978년 2월 7일
    1977: new Date(1977, 1, 18),   // 1977년 2월 18일
    1976: new Date(1976, 0, 31),   // 1976년 1월 31일
    1975: new Date(1975, 1, 11),   // 1975년 2월 11일
    1974: new Date(1974, 0, 23),   // 1974년 1월 23일
    1973: new Date(1973, 1, 3),    // 1973년 2월 3일
    1972: new Date(1972, 1, 15),   // 1972년 2월 15일
    1971: new Date(1971, 0, 27),   // 1971년 1월 27일
    1970: new Date(1970, 1, 6),    // 1970년 2월 6일
    1969: new Date(1969, 1, 17),   // 1969년 2월 17일
    1968: new Date(1968, 0, 30),   // 1968년 1월 30일
    1967: new Date(1967, 1, 9),    // 1967년 2월 9일
    1966: new Date(1966, 0, 21),   // 1966년 1월 21일
    1965: new Date(1965, 1, 2),    // 1965년 2월 2일
    1964: new Date(1964, 1, 13),   // 1964년 2월 13일
    1963: new Date(1963, 0, 25),   // 1963년 1월 25일
    1962: new Date(1962, 1, 5),    // 1962년 2월 5일
    1961: new Date(1961, 1, 15),   // 1961년 2월 15일
    1960: new Date(1960, 0, 28),   // 1960년 1월 28일
    1959: new Date(1959, 1, 8),    // 1959년 2월 8일
    1958: new Date(1958, 1, 18),   // 1958년 2월 18일
    1957: new Date(1957, 0, 31),   // 1957년 1월 31일
    1956: new Date(1956, 1, 12),   // 1956년 2월 12일
    1955: new Date(1955, 0, 24),   // 1955년 1월 24일
    1954: new Date(1954, 1, 3),    // 1954년 2월 3일
    1953: new Date(1953, 1, 14),   // 1953년 2월 14일
    1952: new Date(1952, 0, 27),   // 1952년 1월 27일
    1951: new Date(1951, 1, 6),    // 1951년 2월 6일
    1950: new Date(1950, 1, 17),   // 1950년 2월 17일
    1949: new Date(1949, 0, 29),   // 1949년 1월 29일
    1948: new Date(1948, 1, 10),   // 1948년 2월 10일
    1947: new Date(1947, 0, 22),   // 1947년 1월 22일
    1946: new Date(1946, 1, 2),    // 1946년 2월 2일
    1945: new Date(1945, 1, 13),   // 1945년 2월 13일
    1944: new Date(1944, 0, 25),   // 1944년 1월 25일
    1943: new Date(1943, 1, 5),    // 1943년 2월 5일
    1942: new Date(1942, 1, 15),   // 1942년 2월 15일
    1941: new Date(1941, 0, 27),   // 1941년 1월 27일
    1940: new Date(1940, 1, 8),    // 1940년 2월 8일
    1939: new Date(1939, 1, 19),   // 1939년 2월 19일
    1938: new Date(1938, 0, 31),   // 1938년 1월 31일
    1937: new Date(1937, 1, 11),   // 1937년 2월 11일
    1936: new Date(1936, 0, 24),   // 1936년 1월 24일
    1935: new Date(1935, 1, 4),    // 1935년 2월 4일
    1934: new Date(1934, 1, 14),   // 1934년 2월 14일
    1933: new Date(1933, 0, 26),   // 1933년 1월 26일
    1932: new Date(1932, 1, 6),    // 1932년 2월 6일
    1931: new Date(1931, 1, 17),   // 1931년 2월 17일
    1930: new Date(1930, 0, 30),   // 1930년 1월 30일
  };

  // 한국천문연구원 기반 정확한 년도별 월별 일수 (다음 카페 데이터 기반)
  const lunarMonthDays = {
    2040: [30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30, 29],
    2039: [30, 30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 29],
    2038: [30, 30, 29, 30, 29, 30, 29, 30, 29, 29, 30, 29],
    2037: [30, 30, 29, 30, 29, 29, 30, 29, 29, 30, 29, 30],
    2036: [30, 30, 29, 30, 29, 29, 29, 29, 30, 29, 30, 30],
    2035: [30, 29, 30, 29, 29, 30, 29, 29, 30, 30, 29, 30],
    2034: [29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 30, 29],
    2033: [29, 30, 29, 29, 30, 29, 30, 30, 30, 30, 29, 30],
    2032: [30, 29, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30],
    2031: [30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30, 29],
    2030: [29, 30, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29],
    2029: [30, 30, 29, 30, 30, 29, 29, 30, 29, 29, 30, 30],
    2028: [29, 30, 30, 29, 30, 29, 30, 29, 29, 30, 30, 29],
    2027: [29, 30, 29, 30, 29, 29, 30, 29, 29, 30, 30, 30],
    2026: [30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 30],
    2025: [30, 29, 30, 29, 29, 30, 30, 29, 30, 30, 30, 29],
    2024: [29, 30, 29, 29, 30, 29, 30, 30, 29, 30, 30, 29],
    2023: [29, 30, 30, 29, 30, 29, 30, 30, 29, 30, 29, 30],
    2022: [30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 29, 30],
    2021: [29, 30, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29],
    2020: [30, 29, 30, 30, 30, 29, 29, 30, 29, 30, 29, 30],
    2019: [30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30],
    2018: [29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30],
    2017: [30, 29, 29, 30, 29, 30, 29, 30, 29, 30, 30, 30],
    2016: [29, 29, 30, 29, 29, 30, 29, 30, 30, 29, 30, 30],
    2015: [29, 30, 29, 29, 30, 29, 30, 30, 30, 29, 30, 30],
    2014: [29, 30, 29, 30, 29, 30, 29, 30, 30, 30, 29, 30],
    2013: [30, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29, 30],
    2012: [30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29],
    2011: [30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29],
    2010: [30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30],
    2009: [30, 30, 29, 29, 30, 29, 30, 29, 30, 29, 30, 30],
    2008: [30, 29, 29, 30, 29, 29, 30, 29, 30, 30, 29, 30],
    2007: [29, 29, 30, 29, 29, 30, 29, 30, 30, 30, 29, 30],
    2006: [29, 29, 30, 29, 30, 29, 30, 30, 30, 29, 30, 30],
    2005: [29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30],
    2004: [29, 30, 30, 30, 29, 30, 29, 30, 30, 29, 29, 30],
    2003: [30, 30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 30],
    2002: [30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29],
    2001: [30, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30],
    2000: [30, 30, 29, 29, 30, 29, 29, 30, 29, 30, 30, 29],
    1999: [30, 29, 29, 30, 29, 29, 30, 29, 30, 30, 30, 29],
    1998: [30, 29, 29, 30, 29, 30, 30, 29, 30, 30, 30, 29],
    1997: [29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29],
    1996: [29, 30, 29, 30, 30, 29, 30, 29, 30, 30, 29, 30],
    1995: [29, 30, 30, 29, 30, 30, 29, 30, 30, 29, 29, 30],
    1994: [30, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30],
    1993: [29, 30, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29],
    1992: [29, 30, 30, 29, 29, 30, 29, 29, 30, 29, 30, 30],
    1991: [29, 30, 29, 29, 30, 29, 29, 30, 29, 30, 30, 30],
    1990: [29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 30, 30],
    1989: [30, 29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30],
    1988: [29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29],
    1987: [30, 29, 30, 30, 29, 30, 30, 30, 29, 30, 29, 30],
    1986: [29, 30, 30, 29, 30, 30, 29, 30, 29, 30, 29, 29],
    1985: [29, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30],
    1984: [30, 29, 30, 30, 29, 29, 30, 29, 29, 30, 30, 30],
    1983: [30, 29, 30, 29, 29, 30, 29, 29, 30, 29, 30, 30],
    1982: [30, 29, 30, 29, 30, 29, 29, 30, 30, 29, 30, 30],
    1981: [29, 30, 29, 29, 30, 29, 29, 30, 30, 29, 30, 30],
    1980: [30, 29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30],
    1979: [30, 29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 29],
    1978: [30, 30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 29],
    1977: [30, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29, 29],
    1976: [30, 30, 29, 30, 29, 30, 29, 30, 30, 29, 29, 30],
    1975: [30, 30, 29, 30, 29, 29, 30, 29, 29, 30, 29, 30],
    1974: [30, 30, 29, 30, 29, 30, 29, 29, 30, 30, 29, 30],
    1973: [30, 29, 30, 29, 29, 30, 29, 29, 30, 30, 30, 29],
    1972: [29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 30, 29],
    1971: [29, 30, 29, 29, 30, 30, 29, 30, 30, 30, 29, 30],
    1970: [30, 29, 29, 30, 30, 29, 30, 29, 30, 30, 29, 30],
    1969: [29, 30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 29],
    1968: [29, 30, 30, 29, 30, 29, 30, 30, 29, 30, 29, 30],
    1967: [30, 30, 29, 30, 31, 29, 29, 30, 29, 30, 29, 30],
    1966: [30, 30, 30, 30, 29, 29, 30, 29, 29, 30, 30, 29],
    1965: [29, 30, 29, 30, 29, 29, 30, 29, 29, 30, 30, 29],
    1964: [30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 30],
    1963: [30, 29, 30, 29, 30, 29, 30, 29, 30, 30, 30, 29],
    1962: [29, 30, 29, 29, 30, 29, 30, 30, 29, 30, 30, 29],
    1961: [30, 29, 30, 29, 30, 29, 30, 30, 29, 30, 29, 30],
    1960: [30, 29, 30, 29, 30, 30, 30, 29, 30, 29, 30, 29],
    1959: [29, 30, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29],
    1958: [29, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30],
    1957: [30, 29, 30, 29, 30, 29, 29, 30, 30, 29, 30, 30],
    1956: [29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30],
    1955: [30, 29, 29, 29, 29, 30, 29, 30, 29, 30, 30, 30],
    1954: [29, 29, 30, 29, 29, 30, 29, 30, 30, 29, 30, 30],
    1953: [29, 30, 29, 29, 30, 30, 29, 30, 30, 29, 30, 30],
    1952: [29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30],
    1951: [30, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29, 30],
    1950: [30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29],
    1949: [30, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30],
    1948: [30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30],
    1947: [30, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30],
    1946: [30, 29, 29, 30, 29, 29, 30, 29, 30, 30, 29, 30],
    1945: [29, 29, 30, 29, 29, 30, 29, 30, 30, 30, 29, 30],
    1944: [29, 29, 30, 29, 29, 30, 29, 30, 30, 29, 30, 30],
    1943: [29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30],
    1942: [30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 29, 30],
    1941: [30, 30, 29, 30, 30, 29, 29, 29, 30, 29, 30, 29],
    1940: [30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29],
    1939: [30, 30, 29, 29, 30, 29, 29, 30, 29, 30, 29, 30],
    1938: [30, 30, 29, 29, 30, 29, 29, 29, 30, 30, 29, 30],
    1937: [30, 29, 29, 30, 29, 29, 30, 29, 30, 30, 30, 29],
    1936: [30, 29, 29, 29, 30, 29, 30, 29, 30, 30, 30, 29],
    1935: [29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29],
    1934: [29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30],
    1933: [29, 30, 30, 29, 30, 29, 30, 29, 30, 29, 29, 30],
    1932: [30, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30],
    1931: [30, 30, 30, 29, 29, 30, 29, 29, 30, 29, 30, 29],
    1930: [29, 30, 30, 29, 29, 30, 29, 30, 29, 30, 30, 29],
    default: [29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30]
  };

  // 윤달 정보 (년도: [윤달월, 윤달일수]) - 한국천문연구원 정확한 데이터
  const leapMonthInfo = {
    2039: [5, 29],   // 2039년 윤5월 29일
    2036: [6, 30],   // 2036년 윤6월 30일
    2033: [7, 29],   // 2033년 윤7월 29일
    2031: [3, 29],   // 2031년 윤3월 29일
    2028: [5, 29],   // 2028년 윤5월 29일
    2025: [6, 29],   // 2025년 윤6월 29일
    2023: [2, 29],   // 2023년 윤2월 29일
    2020: [4, 29],   // 2020년 윤4월 29일
    2017: [5, 29],   // 2017년 윤5월 29일
    2014: [9, 29],   // 2014년 윤9월 29일
    2012: [3, 30],   // 2012년 윤3월 30일
    2009: [5, 29],   // 2009년 윤5월 29일
    2006: [7, 29],   // 2006년 윤7월 29일
    2004: [2, 29],   // 2004년 윤2월 29일
    2001: [4, 29],   // 2001년 윤4월 29일
    1998: [5, 29],   // 1998년 윤5월 29일
    1995: [8, 29],   // 1995년 윤8월 29일
    1993: [3, 29],   // 1993년 윤3월 29일
    1990: [5, 29],   // 1990년 윤5월 29일
    1987: [6, 29],   // 1987년 윤6월 29일
    1984: [10, 29],  // 1984년 윤10월 29일
    1982: [4, 29],   // 1982년 윤4월 29일
    1979: [6, 30],   // 1979년 윤6월 30일
    1976: [8, 29],   // 1976년 윤8월 29일
    1974: [4, 29],   // 1974년 윤4월 29일
    1971: [5, 29],   // 1971년 윤5월 29일
    1968: [7, 29],   // 1968년 윤7월 29일
    1966: [3, 29],   // 1966년 윤3월 29일
    1963: [4, 29],   // 1963년 윤4월 29일
    1960: [6, 29],   // 1960년 윤6월 29일
    1957: [8, 29],   // 1957년 윤8월 29일
    1955: [3, 30],   // 1955년 윤3월 30일
    1952: [5, 30],   // 1952년 윤5월 30일
    1949: [7, 29],   // 1949년 윤7월 29일
    1947: [2, 29],   // 1947년 윤2월 29일
    1944: [4, 30],   // 1944년 윤4월 30일
    1941: [6, 30],   // 1941년 윤6월 30일
    1938: [7, 30],   // 1938년 윤7월 30일
    1936: [3, 30],   // 1936년 윤3월 30일
    1933: [5, 30],   // 1933년 윤5월 30일
    1930: [6, 29]    // 1930년 윤6월 29일
  };

  // 정확한 음력-양력 변환 함수 (시간대 문제 해결)
  const lunarToSolar = (lunarYear, lunarMonth, lunarDay, isLeapMonth = false) => {
    const baseDate = lunarNewYearDates[lunarYear];
    const monthDays = lunarMonthDays[lunarYear] || lunarMonthDays.default;
    const leapInfo = leapMonthInfo[lunarYear];

    if (!baseDate) {
      // 범위를 벗어난 년도는 근사치 계산
      const estimatedBase = new Date(lunarYear, 1, 15);
      let totalDays = 0;
      
      for (let i = 1; i < lunarMonth; i++) {
        totalDays += (monthDays[i - 1] || 29);
      }
      
      if (isLeapMonth && leapInfo && lunarMonth === leapInfo[0]) {
        totalDays += leapInfo[1];
      } else if (leapInfo && lunarMonth > leapInfo[0]) {
        totalDays += leapInfo[1];
      }
      
      totalDays += lunarDay - 1;

      // 시간대 문제 해결: 로컬 시간 기준으로 명시적 계산
      const resultDate = new Date(estimatedBase.getFullYear(), estimatedBase.getMonth(), estimatedBase.getDate() + totalDays);
      
      return {
        year: resultDate.getFullYear(),
        month: resultDate.getMonth() + 1,
        day: resultDate.getDate(),
        isApproximate: true
      };
    }

    // 정확한 계산
    let totalDays = 0;
    
    // 해당 월까지의 누적 일수 계산
    for (let i = 1; i < lunarMonth; i++) {
      totalDays += monthDays[i - 1];
    }
    
    // 윤달 처리
    if (isLeapMonth && leapInfo && lunarMonth === leapInfo[0]) {
      // 현재 입력한 달이 윤달인 경우
      totalDays += monthDays[lunarMonth - 1]; // 평달 일수 먼저 더하고
      totalDays += lunarDay - 1; // 윤달에서의 일수
    } else {
      // 일반적인 경우
      if (leapInfo && lunarMonth > leapInfo[0]) {
        // 입력한 달이 윤달보다 뒤에 있는 경우 윤달 일수 추가
        totalDays += leapInfo[1];
      }
      totalDays += lunarDay - 1;
    }

    // 시간대 문제 해결: 로컬 시간 기준으로 명시적 계산
    const resultDate = new Date(baseDate.getFullYear(), baseDate.getMonth(), baseDate.getDate() + totalDays);

    return {
      year: resultDate.getFullYear(),
      month: resultDate.getMonth() + 1,
      day: resultDate.getDate(),
      isApproximate: false
    };
  };

  const handleConvert = () => {
    if (!lunarData.year || !lunarData.month || !lunarData.day) {
      alert('음력 년, 월, 일을 모두 입력해주세요.');
      return;
    }

    const year = parseInt(lunarData.year);
    const month = parseInt(lunarData.month);
    const day = parseInt(lunarData.day);
    const hour = parseInt(lunarData.hour);
    const minute = parseInt(lunarData.minute);

    if (year < 1930 || year > 2040) {
      alert('1930년~2040년 범위에서 변환 가능합니다.');
      return;
    }

    if (month < 1 || month > 12 || day < 1 || day > 30) {
      alert('올바른 음력 날짜를 입력해주세요.');
      return;
    }

    // 윤달 유효성 검사
    const leapInfo = leapMonthInfo[year];
    if (lunarData.isLeapMonth && (!leapInfo || month !== leapInfo[0])) {
      alert(`${year}년에는 ${month}월 윤달이 없습니다.`);
      return;
    }

    // 해당 월의 최대 일수 검사
    const monthDaysArray = lunarMonthDays[year];
    if (monthDaysArray) {
      let maxDays;
      if (lunarData.isLeapMonth && leapInfo && month === leapInfo[0]) {
        maxDays = leapInfo[1]; // 윤달 일수
      } else {
        maxDays = monthDaysArray[month - 1]; // 해당 월 일수
      }
      
      if (day > maxDays) {
        alert(`${year}년 ${lunarData.isLeapMonth ? '윤' : ''}${month}월은 ${maxDays}일까지 있습니다.`);
        return;
      }
    }

    setIsConverting(true);
    
    setTimeout(() => {
      try {
        const result = lunarToSolar(year, month, day, lunarData.isLeapMonth);
        const resultWithTime = {
          ...result,
          hour,
          minute,
          originalLunar: { ...lunarData, year, month, day }
        };
        
        setConvertedResult(resultWithTime);
        setIsConverting(false);
      } catch (error) {
        console.error('변환 오류:', error);
        alert('변환 중 오류가 발생했습니다.');
        setIsConverting(false);
      }
    }, 500);
  };

  const handleApply = () => {
    if (convertedResult && onConvert) {
      onConvert(convertedResult);
    }
  };

  const handleChange = (field, value) => {
    setLunarData(prev => ({
      ...prev,
      [field]: value
    }));
    // 변환 결과 초기화
    if (convertedResult) {
      setConvertedResult(null);
    }
  };

  // 현재 년도의 윤달 정보 표시
  const getCurrentYearLeapInfo = () => {
    const year = parseInt(lunarData.year);
    const leapInfo = leapMonthInfo[year];
    if (leapInfo) {
      return `${year}년에는 ${leapInfo[0]}월이 윤달입니다 (${leapInfo[1]}일)`;
    }
    return `${year}년에는 윤달이 없습니다.`;
  };

  return (
    <div className="fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center p-4 z-50">
      <div className="bg-white rounded-2xl shadow-2xl w-full max-w-lg max-h-[90vh] overflow-y-auto">
        {/* 헤더 */}
        <div className="bg-gradient-to-r from-purple-600 to-pink-600 text-white p-6 rounded-t-2xl">
          <div className="flex items-center justify-between">
            <div>
              <h2 className="text-xl font-bold flex items-center gap-2">
                🌙 음력 → 양력 변환기
              </h2>
              <p className="text-white/80 text-sm mt-1">한국천문연구원 데이터 기반 정확한 변환</p>
            </div>
            <button
              onClick={onClose}
              className="p-2 hover:bg-white/20 rounded-lg transition-colors"
            >
              <X size={20} />
            </button>
          </div>
        </div>

        {/* 내용 */}
        <div className="p-6 space-y-6">
          {/* 음력 입력 */}
          <div className="space-y-4">
            <h3 className="font-bold text-gray-800 flex items-center gap-2">
              <Calendar className="text-purple-600" size={18} />
              음력 생년월일시 입력
            </h3>

            {/* 음력 년월일 */}
            <div className="grid grid-cols-3 gap-3">
              <div>
                <label className="block text-sm font-medium text-gray-600 mb-1">년</label>
                <input
                  type="number"
                  placeholder="1967"
                  value={lunarData.year}
                  onChange={(e) => handleChange('year', e.target.value)}
                  className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-purple-400"
                  min="1930"
                  max="2040"
                />
              </div>
              <div>
                <label className="block text-sm font-medium text-gray-600 mb-1">월</label>
                <input
                  type="number"
                  placeholder="1"
                  value={lunarData.month}
                  onChange={(e) => handleChange('month', e.target.value)}
                  className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-purple-400"
                  min="1"
                  max="12"
                />
              </div>
              <div>
                <label className="block text-sm font-medium text-gray-600 mb-1">일</label>
                <input
                  type="number"
                  placeholder="1"
                  value={lunarData.day}
                  onChange={(e) => handleChange('day', e.target.value)}
                  className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-purple-400"
                  min="1"
                  max="30"
                />
              </div>
            </div>

            {/* 윤달 체크박스 */}
            <div className="bg-blue-50 rounded-lg p-3">
              <div className="flex items-center gap-3 mb-2">
                <input
                  type="checkbox"
                  id="isLeapMonth"
                  checked={lunarData.isLeapMonth}
                  onChange={(e) => handleChange('isLeapMonth', e.target.checked)}
                  className="w-4 h-4 text-purple-600 border-gray-300 rounded focus:ring-purple-500"
                />
                <label htmlFor="isLeapMonth" className="text-sm font-medium text-gray-700">
                  윤달입니다 (예: 윤4월)
                </label>
              </div>
              {lunarData.year && (
                <p className="text-xs text-blue-600">
                  {getCurrentYearLeapInfo()}
                </p>
              )}
            </div>

            {/* 음력 시간 */}
            <div className="grid grid-cols-2 gap-3">
              <div>
                <label className="block text-sm font-medium text-gray-600 mb-1">
                  <Clock size={16} className="inline mr-1" />
                  시
                </label>
                <select
                  value={lunarData.hour}
                  onChange={(e) => handleChange('hour', e.target.value)}
                  className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-purple-400"
                >
                  {Array.from({ length: 24 }, (_, i) => (
                    <option key={i} value={i.toString().padStart(2, '0')}>
                      {i.toString().padStart(2, '0')}시
                    </option>
                  ))}
                </select>
              </div>
              <div>
                <label className="block text-sm font-medium text-gray-600 mb-1">분</label>
                <select
                  value={lunarData.minute}
                  onChange={(e) => handleChange('minute', e.target.value)}
                  className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-purple-400"
                >
                  {Array.from({ length: 60 }, (_, i) => (
                    <option key={i} value={i.toString().padStart(2, '0')}>
                      {i.toString().padStart(2, '0')}분
                    </option>
                  ))}
                </select>
              </div>
            </div>
          </div>

          {/* 변환 버튼 */}
          <button
            onClick={handleConvert}
            disabled={isConverting}
            className="w-full bg-gradient-to-r from-purple-600 to-pink-600 text-white py-3 px-6 rounded-lg font-bold hover:from-purple-700 hover:to-pink-700 transition-all flex items-center justify-center gap-2 disabled:opacity-50"
          >
            {isConverting ? (
              <>
                <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white"></div>
                변환 중...
              </>
            ) : (
              <>
                <ArrowRight size={18} />
                양력으로 변환하기
              </>
            )}
          </button>

          {/* 변환 결과 */}
          {convertedResult && (
            <div className="bg-green-50 border border-green-200 rounded-lg p-4">
              <h4 className="font-bold text-green-800 mb-3 flex items-center gap-2">
                <CheckCircle className="text-green-600" size={18} />
                변환 결과 (양력)
              </h4>
              
              <div className="space-y-3 mb-4">
                <div className="bg-white rounded-lg p-4 border border-green-200 shadow-sm">
                  <div className="text-center">
                    <div className="text-2xl font-bold text-gray-800 mb-1">
                      {convertedResult.year}년 {convertedResult.month}월 {convertedResult.day}일
                    </div>
                    <div className="text-lg text-gray-600">
                      {convertedResult.hour.toString().padStart(2, '0')}시 {convertedResult.minute.toString().padStart(2, '0')}분
                    </div>
                  </div>
                </div>
                
                <div className="grid grid-cols-2 gap-3 text-sm">
                  <div className="bg-white rounded-lg p-3 border border-green-100">
                    <span className="text-green-600 font-medium">원본 음력:</span>
                    <div className="text-gray-700 mt-1">
                      {convertedResult.originalLunar.year}년 {convertedResult.originalLunar.month}월 {convertedResult.originalLunar.day}일
                      {convertedResult.originalLunar.isLeapMonth && ' (윤달)'}
                    </div>
                  </div>
                  <div className="bg-white rounded-lg p-3 border border-green-100">
                    <span className="text-green-600 font-medium">정확도:</span>
                    <div className="text-gray-700 mt-1">
                      {convertedResult.isApproximate ? '근사치' : '정확'}
                    </div>
                  </div>
                </div>
                
                {convertedResult.isApproximate && (
                  <div className="flex items-center gap-2 text-amber-600 bg-amber-50 rounded-lg p-3 border border-amber-200">
                    <AlertCircle size={16} />
                    <span className="text-sm">
                      1930-2040년 범위 밖이므로 근사치입니다. 1-2일 오차가 있을 수 있습니다.
                    </span>
                  </div>
                )}
              </div>

              <button
                onClick={handleApply}
                className="w-full bg-green-600 text-white py-3 px-4 rounded-lg font-bold hover:bg-green-700 transition-all flex items-center justify-center gap-2"
              >
                <CheckCircle size={18} />
                ✅ 이 양력 날짜로 사주 보기
              </button>
            </div>
          )}

          {/* 안내사항 */}
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
            <h5 className="font-bold text-blue-800 mb-2">📋 변환 안내</h5>
            <div className="space-y-1 text-sm text-blue-700">
              <p>• <strong>정확한 변환:</strong> 1930년~2040년 (한국천문연구원 데이터 기반)</p>
              <p>• <strong>근사치 변환:</strong> 그 외 년도 (1-2일 오차 가능)</p>
              <p>• <strong>윤달:</strong> 음력에서 같은 달이 두 번 있는 경우 체크하세요</p>
              <p>• <strong>시간:</strong> 음력 기준 시간을 입력하면 그대로 양력에 적용됩니다</p>
            </div>
          </div>

          {/* 주요 윤달 정보 */}
          <div className="bg-gray-50 border border-gray-200 rounded-lg p-4">
            <h5 className="font-bold text-gray-800 mb-2">🌙 주요 윤달 정보</h5>
            <div className="grid grid-cols-2 gap-2 text-xs text-gray-600">
              <div>2039년: 윤5월</div>
              <div>2036년: 윤6월</div>
              <div>2033년: 윤7월</div>
              <div>2031년: 윤3월</div>
              <div>2028년: 윤5월</div>
              <div>2025년: 윤6월</div>
              <div>2023년: 윤2월</div>
              <div>2020년: 윤4월</div>
              <div>2017년: 윤5월</div>
              <div>2014년: 윤9월</div>
              <div>2012년: 윤3월</div>
              <div>2009년: 윤5월</div>
              <div>2006년: 윤7월</div>
              <div>2004년: 윤2월</div>
              <div>2001년: 윤4월</div>
              <div>1998년: 윤5월</div>
              <div>1995년: 윤8월</div>
              <div>1993년: 윤3월</div>
              <div>1990년: 윤5월</div>
              <div>1987년: 윤6월</div>
              <div>1984년: 윤10월</div>
              <div>1982년: 윤4월</div>
              <div>1979년: 윤6월</div>
              <div>1976년: 윤8월</div>
            </div>
          </div>

          {/* 변환 예시 */}
          <div className="bg-purple-50 border border-purple-200 rounded-lg p-4">
            <h5 className="font-bold text-purple-800 mb-2">💡 변환 예시 (정확한 데이터)</h5>
            <div className="space-y-1 text-sm text-purple-700">
              <p>• 음력 1967년 7월 21일 → 양력 1967년 8월 26일</p>
              <p>• 음력 1930년 6월 15일 → 양력 1930년 7월 10일</p>
              <p>• 음력 1930년 윤6월 15일 → 양력 1930년 8월 9일</p>
              <p>• 음력 1990년 5월 15일 → 양력 1990년 7월 6일</p>
              <p>• 음력 1990년 윤5월 15일 → 양력 1990년 8월 5일</p>
              <p>• 음력 2025년 1월 1일 → 양력 2025년 1월 29일</p>
            </div>
          </div>
        </div>

        {/* 하단 버튼 */}
        <div className="p-6 border-t border-gray-200 bg-gray-50 rounded-b-2xl">
          <button
            onClick={onClose}
            className="w-full bg-gray-500 text-white py-3 px-4 rounded-lg font-medium hover:bg-gray-600 transition-all"
          >
            닫기
          </button>
        </div>
      </div>
    </div>
  );
};